trigger:
- master

resources:
- repo: self

variables:
  aksClusterName: eshop
  resourceGroupName: 'tmp-2020'
  # Agent VM image name
  vmImageName: 'ubuntu-16.04'

stages:
- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: "Development"
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:      
          steps:
          - checkout: self
          - script: az login --service-principal --username $(sericePrincipalAppId) --tenant $(servicePrincipalTenantId) --password $(servicePrincipalPassword)
            displayName: Login in Azure CLI
          - script: az aks get-credentials --resource-group $(resourceGroupName) --name $(aksClusterName)
            displayName: Configure Kubectl
          - task: HelmInstaller@0
            inputs:
              helmVersion: '3.2.4'
              installKubectl: true
              kubectlVersion: '1.16'
          - script: kubectl apply -f ./mandatory.yaml &&
              kubectl apply -f ./local-cm.yaml &&
              kubectl apply -f ./local-svc.yaml
            displayName: Install NGINX Ingress Controller
            workingDirectory: 'deploy/k8s/nginx-ingress/'
          - script: './deploy-all.sh --dns aks --aks-name $(aksClusterName) --aks-rg $(resourceGroupName) --namespace default --tag linux-dev'
            displayName: Helm deploy
            workingDirectory: 'deploy/k8s/helm/'
          # - task: AzurePowerShell@5
          #   inputs:
          #     azureSubscription: 'Azure subscription 1(bbeb73e1-c85a-4b87-934f-8bed6c3801c1)'
          #     ScriptType: 'InlineScript'
          #     Inline: './deploy-all-mac.ps1 -externalDns aks -aksName $(aksClusterName) -aksRg $(resourceGroupName) -imageTag linux-dev -useMesh $false'
          #     FailOnStandardError: true
          #     azurePowerShellVersion: 'LatestVersion'
          #     workingDirectory: 'deploy/k8s/helm/'
          